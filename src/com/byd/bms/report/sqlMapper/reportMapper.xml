<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">
	<!-- 在制订单进度报表 -->
	<select id="getOrderSchedule" resultType="Map">
		<!-- <![CDATA[ SELECT o.order_no,o.order_name,o.order_code,o.order_qty,CONCAT(o.order_name," 
			",b.bus_type_code," ",o.order_qty+'') order_desc, (SELECT count(b.bus_number) 
			welding_onlineNum FROM BMS_PLAN_BUS b WHERE b.welding_online_date IS NOT 
			NULL AND b.warehousing_date IS NULL AND b.order_id = o.id) productionNum, 
			(SELECT count(b.bus_number) warehousingNum FROM BMS_PLAN_BUS b WHERE b.warehousing_date 
			IS NOT NULL AND b.order_id = o.id) warehousingNum, (SELECT count(b.bus_number) 
			dispatchNum FROM BMS_PLAN_BUS b WHERE b.dispatch_date IS NOT NULL AND b.order_id 
			= o.id) dispatchNum FROM BMS_ORDER o LEFT JOIN BMS_BASE_BUS_TYPE b ON o.bus_type_id 
			= b.id WHERE o.status = '0' AND o.order_qty != (SELECT count(b.bus_number) 
			dispatchNum FROM BMS_PLAN_BUS b WHERE b.dispatch_date IS NOT NULL AND b.order_id 
			= o.id) ]]> -->
		
		<![CDATA[	SELECT *,convert((t.productionNum+0)/(t.order_qty+0)*100,decimal(10,2)) production_rate,
						convert((t.warehousingNum+0)/(t.order_qty+0)*100,decimal(10,2)) warehousing_rate,
						convert((t.dispatchNum+0)/(t.order_qty+0)*100,decimal(10,2)) dispatch_rate,
						convert(((t.order_qty+0)-(t.productionNum+0)-(t.warehousingNum+0))/(t.order_qty+0)*100,decimal(10,2)) order_rate
		 FROM		
		 (SELECT o.order_no,o.order_name,o.order_code,o.order_qty,CONCAT(o.order_name,' ',b.bus_type_code,' ',o.order_qty+'') order_desc,
					(SELECT count(b.bus_number) welding_onlineNum FROM BMS_PLAN_BUS b WHERE b.welding_online_date IS NOT NULL AND b.warehousing_date IS NULL AND b.order_id = o.id) productionNum,
					(SELECT count(b.bus_number) warehousingNum FROM BMS_PLAN_BUS b WHERE b.warehousing_date IS NOT NULL AND b.order_id = o.id) warehousingNum,
					(SELECT count(b.bus_number) dispatchNum FROM BMS_PLAN_BUS b WHERE b.dispatch_date IS NOT NULL AND b.order_id = o.id) dispatchNum
						FROM BMS_ORDER o 
						LEFT JOIN BMS_BASE_BUS_TYPE b ON o.bus_type_id = b.id
						WHERE o.status = '0' 
						AND o.order_qty != (SELECT count(b.bus_number) dispatchNum FROM BMS_PLAN_BUS b WHERE b.dispatch_date IS NOT NULL AND b.order_id = o.id)
		) t ]]>
	</select>

	<!-- 工厂订单进度报表 -->
	<select id="getFactoryOrderSchedule" resultType="Map">
		
			SELECT CONCAT(o.order_no,o.order_name,' ',b.bus_type_code,' ',o.order_qty+'','台') order_desc,o.order_qty order_qty,fo.production_qty,
					(SELECT count(b.bus_number) welding_onlineNum FROM BMS_PLAN_BUS b WHERE b.welding_online_date IS NOT NULL AND b.order_id = o.id
					<if test="factory_id!=null and factory_id!=''">
						and b.factory_id = #{factory_id}
					</if>
					) welding_onlineNum,
					(SELECT count(b.bus_number) chassis_onlineNum FROM BMS_PLAN_BUS b WHERE b.chassis_online_date IS NOT NULL AND b.order_id = o.id
					<if test="factory_id!=null and factory_id!=''">
						and b.factory_id = #{factory_id}
					</if>
					) chassis_onlineNum,
					(SELECT count(b.bus_number) assembly_offlineNum FROM BMS_PLAN_BUS b WHERE b.assembly_offline_date IS NOT NULL AND b.order_id = o.id
					<if test="factory_id!=null and factory_id!=''">
						and b.factory_id = #{factory_id}
					</if>
					) assembly_offlineNum,
					(SELECT count(b.bus_number) warehousingNum FROM BMS_PLAN_BUS b WHERE b.warehousing_date IS NOT NULL AND b.order_id = o.id
					<if test="factory_id!=null and factory_id!=''">
						and b.factory_id = #{factory_id}
					</if>
					) warehousingNum
						FROM BMS_FACTORY_ORDER fo
						LEFT JOIN BMS_ORDER o ON fo.order_id = o.id
						LEFT JOIN BMS_BASE_BUS_TYPE b ON o.bus_type_id = b.id
						WHERE o.status = '0' 
						AND o.order_qty != (SELECT count(b.bus_number) dispatchNum FROM BMS_PLAN_BUS b WHERE b.warehousing_date IS NOT NULL AND b.order_id = o.id)
		
		<if test="factory_id!=null and factory_id!=''">
			and fo.factory_id = #{factory_id}
		</if>
		order by fo.edit_date desc limit 5;
	</select>

	<!-- 订单报表 end -->

	<!-- 计划报表-工厂计划达成率 -->
	<select id="getPlanRate" parameterType="Map" resultType="Map">
	<![CDATA[	SELECT f.factory_name,ifnull(sum(p.plan_qty),0) AS
		sum_plan_qty,k.key_name,sum(IFNULL(a.amend_qty,p.plan_qty)) AS sum_amend_qty,
		(CASE
			WHEN k.key_name = '自制件下线' THEN (SELECT IFNULL(SUM(x.quantity),0) AS real_qty_01 FROM BMS_PD_WORKSHOP_SUPPLY x WHERE x.factory_id = p.factory_id AND x.supply_date >= #{start_date} AND x.supply_date <=	#{end_date} AND x.supply_workshop ='自制件' AND x.receive_workshop ='部件')
			WHEN k.key_name = '部件上线' THEN (SELECT ifnull(sum(x.online_real_qty),0) as real_qty_01 FROM BMS_PD_PARTS_PLAN_FINISH x WHERE x.factory_id = p.factory_id AND x.parts_id = '194' AND x.date >=	REPLACE(#{start_date},'-','') AND x.date <= REPLACE(#{end_date},'-','') ) 
			WHEN k.key_name = '部件下线' THEN (SELECT ifnull(sum(x.offline_real_qty) ,0)as real_qty_01 FROM BMS_PD_PARTS_PLAN_FINISH x WHERE x.factory_id = p.factory_id AND x.parts_id = '194' AND x.date >=REPLACE(#{start_date},'-','') AND x.date <= REPLACE(#{end_date},'-','') ) 
			WHEN k.key_name = '焊装上线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.welding_online_date > #{b_start_date} AND b.welding_online_date <= #{b_end_date} ) 
			WHEN k.key_name = '焊装下线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.welding_offline_date > #{b_start_date} AND b.welding_offline_date <= #{b_end_date} )
			WHEN k.key_name = '涂装上线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.painting_online_date > #{b_start_date} AND b.painting_online_date <= #{b_end_date} )
			WHEN k.key_name = '涂装下线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.painting_offline_date > #{b_start_date} AND b.painting_offline_date <= #{b_end_date} )
			WHEN k.key_name = '底盘上线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.chassis_online_date > #{b_start_date} AND b.chassis_online_date <= #{b_end_date} )
			WHEN k.key_name = '底盘下线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.chassis_offline_date > #{b_start_date} AND b.chassis_offline_date <= #{b_end_date} )
			WHEN k.key_name = '总装上线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.assembly_online_date > #{b_start_date} AND b.assembly_online_date <= #{b_end_date} )
			WHEN k.key_name = '总装下线' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.assembly_offline_date > #{b_start_date} AND b.assembly_offline_date <= #{b_end_date} )
			WHEN k.key_name = '入库' THEN (SELECT ifnull(COUNT(id),0) as real_qty_01 FROM BMS_PLAN_BUS b WHERE b.factory_id = p.factory_id AND b.warehousing_date > #{b_start_date} AND b.warehousing_date <= #{b_end_date} )
			END 
		) as real_qty
	
		FROM BMS_PLAN_PRODUCTION_PLAN p
		LEFT JOIN BMS_BASE_FACTORY f ON p.factory_id = f.id
		LEFT OUTER JOIN BMS_BASE_KEY k ON p.plan_code_id = k.id
		LEFT OUTER JOIN BMS_PD_PLAN_AMEND a ON p.id = a.plan_id
		WHERE 1=1
		AND p.plan_date >= REPLACE(#{start_date},'-','') AND p.plan_date <= REPLACE(#{end_date},'-','')
		AND (k.key_name LIKE '%下线%' OR k.key_name LIKE '%入库%') AND k.key_name !='玻璃钢下线'
		 ]]>
		<if test="factory_id!='' and factory_id !=null">
			and p.factory_id = #{factory_id}
		</if>
		GROUP BY f.factory_name,k.key_name ORDER BY f.id,f.factory_name,k.id,k.key_name
	</select>

	<!-- 获取计划数量 -->
	<select id="queryPlanQty" parameterType="Map" resultType="Map">
		<![CDATA[
			SELECT k.key_name,sum(p.plan_qty) plan_qty FROM BMS_PLAN_PRODUCTION_PLAN p 
				LEFT JOIN BMS_BASE_FACTORY f ON p.factory_id = f.id
				LEFT JOIN BMS_BASE_KEY k ON p.plan_code_id = k.id
				WHERE p.plan_code_id IN(
				SELECT k.id FROM BMS_BASE_KEY k
					WHERE k.key_code = 'PLAN_CODE' AND k.key_name IN('自制件下线','部件下线','焊装下线','涂装下线','底盘下线','总装下线','成品库上线','入库')
				)
				AND p.factory_id in (
				  		select case when LOCATE(p.factory_id,#{factory_id})>0 then p.factory_id else 0 end as factory_id
							from BMS_BASE_FACTORY f )
				AND p.plan_date >=	REPLACE(#{start_date},'-','') AND p.plan_date <= REPLACE(#{end_date},'-','')
			GROUP BY p.plan_code_id ORDER BY p.plan_code_id
		]]>
	</select>
	<!-- 获取四大车间实际完成数量 -->
	<select id="getPlanSearchRealCount" parameterType="List"
		resultType="map">
		<foreach collection="list" index="index" item="item"
			separator="UNION ALL">
			SELECT IFNULL(COUNT(id),0) AS count FROM BMS_PLAN_BUS b
			WHERE
			b.factory_id in (
			select case when
			LOCATE(b.factory_id,#{item.factory_id})>0 then
			b.factory_id else 0 end
			as factory_id
			from BMS_BASE_FACTORY f )
			<if test="item.start_date !=null and item.start_date!=''">
				<![CDATA[ AND ${item.workshop} > #{item.start_date} ]]>
			</if>
			<if test="item.end_date !=null and item.end_date!=''">
				<![CDATA[ AND ${item.workshop} <= #{item.end_date} ]]>
			</if>
		</foreach>
	</select>
	<!-- 获取部件车间实际完成数量 -->
	<select id="getPlanPartsRealCount" parameterType="Map"
		resultType="int">
		SELECT IFNULL(SUM(${workshop}),0) AS count FROM
		BMS_PD_PARTS_PLAN_FINISH b
		WHERE b.factory_id in (
		select case when
		LOCATE(b.factory_id,#{factory_id})>0 then b.factory_id else
		0 end as
		factory_id
		from BMS_BASE_FACTORY f )
		AND b.parts_id = '194'
		<if test="start_date !=null and start_date!=''">
			<![CDATA[ AND b.date >=  REPLACE(#{start_date},'-','') ]]>
		</if>
		<if test="end_date !=null and end_date!=''">
			<![CDATA[ AND b.date <=  REPLACE(#{end_date},'-','') ]]>
		</if>
	</select>
	<select id="getPlanZzjRealCount" parameterType="Map" resultType="int">
	SELECT IFNULL(SUM(quantity),0) AS count FROM BMS_PD_WORKSHOP_SUPPLY 
	WHERE factory_id = #{factory_id} 
	AND supply_workshop = '自制件'
	AND receive_workshop = '部件' 
	AND supply_date >= #{start_date} 
	<![CDATA[ AND supply_date <= #{end_date} ]]>
	</select>
	<!-- 计划报表end -->

	<!-- 技改报表 -->
	<!-- 月技改工时 -->
	<select id="getEcnTime" parameterType="Map" resultType="Map">
		SELECT w1.workshop_name,convert(CASE WHEN all_ecn_time IS NULL THEN 0
		ELSE all_ecn_time END,decimal(10,2)) all_ecn_time
		FROM BMS_BASE_FACTORY
		f1
		LEFT JOIN BMS_BASE_WORKSHOP w1 ON w1.factory_id = f1.id AND
		w1.delete_flag = '0'
		LEFT JOIN (
		SELECT COUNT(d.bus_number)*t.unit_time
		all_ecn_time,t.workshop_id,k.key_name
		workshop_name
		FROM BMS_ECN_TIME t
		LEFT JOIN BMS_BASE_KEY k ON t.workshop_id = k.id AND k.key_code =
		'WORKSHOP'
		LEFT JOIN BMS_ECN_TASK_DETAIL d ON d.ecn_task_id =
		t.ecn_task_id
		WHERE 1=1 AND d.status='1'
		AND k.delete_flag = '0'
		<if test="start_date !=null and start_date!=''">
								<![CDATA[ AND d.confirmor_date >=#{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
								<![CDATA[ AND d.confirmor_date <=#{end_date} ]]>
		</if>
		AND FIND_IN_SET(d.factory_id,#{factory_id})>0
		GROUP BY t.workshop_id
		ORDER BY k.id
		) u ON w1.workshop_name = u.workshop_name
		WHERE
		FIND_IN_SET(f1.id,#{factory_id})>0
		AND f1.delete_flag = '0'
		AND
		w1.workshop_name NOT IN('检测线','调试区','成品库')
		GROUP BY w1.workshop_name
		ORDER BY w1.id

	</select>
	<!-- 订单技改进度 -->
	<select id="getEcnOrderSchedule" parameterType="Map" resultType="Map">
		SELECT
		ecn_factory_id,x.order_no,x.task_content,x.ecn_number,x.finishedNum,convert(ecn_number-x.finishedNum,decimal(10,0))
		notFinishedNum FROM
		(SELECT
		t.task_content,convert(t.ecn_number,decimal(10,0))
		ecn_number,t.ecn_factory_id,o.order_no,
		(SELECT count(d.bus_number)
		FROM BMS_ECN_TASK_DETAIL d WHERE
		t.id = d.ecn_task_id AND
		t.ecn_factory_id = d.factory_id AND
		t.ecn_order_id = d.order_id AND
		d.status = '1') finishedNum
		FROM BMS_ECN_TASK t
		LEFT JOIN BMS_ORDER o ON
		t.ecn_order_id = o.id
		WHERE t.status != '2'
		AND
		FIND_IN_SET(t.ecn_factory_id,#{factory_id})>0
		AND (o.order_no like
		CONCAT('%',#{order},'%') OR o.order_name like
		CONCAT('%',#{order},'%')
		)
		) x
		<if test="order ==null or order == ''">
			WHERE 1=1
			AND x.ecn_number > 0
			AND ecn_number !=
			x.finishedNum
		</if>
	</select>

	<!-- 车型技改分析报表 -->
	<select id="getEcnBusTypeReport" parameterType="Map" resultType="Map">
		SELECT o.order_no,CONCAT(o.order_name,b.bus_type_code,'
		',o.order_qty+'','台') order_desc,COUNT(t.ecn_id) ecns
		FROM BMS_ECN_TASK
		t
		LEFT JOIN BMS_ORDER o ON t.ecn_order_id = o.id
		LEFT JOIN
		BMS_BASE_BUS_TYPE b ON o.bus_type_id = b.id
		WHERE t.status != '2'
		AND
		FIND_IN_SET(t.ecn_factory_id,#{factory_id})>0
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND t.creat_date >=#{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND t.creat_date <=#{end_date} ]]>
		</if>
		<if test="bus_type_id !=null and bus_type_id!=''">
			AND b.id = #{bus_type_id}
		</if>
		GROUP BY t.ecn_order_id
	</select>

	<!-- 技改报表end -->

	<!-- 售后报表start -->

	<!-- 售后问题分类统计报表 -->
	<select id="getAllAfterSaleProblems" parameterType="Map"
		resultType="Map">
		SELECT tmp.*,GROUP_CONCAT(tmp.key_name ,':',tmp.falut_count+'')
		allFalut
		FROM
		(SELECT substring_index(p.bus_number, '-', 1)
		bus_type,CONCAT(IFNULL(o.order_no,''),' ',p.order_describe)
		order_describe,p.customer_name,o.order_qty,f.factory_name,fo.production_qty,p.order_id,p.factory_id,
		COUNT(p.fault_level_id) falut_count,k.key_name
		FROM
		BMS_AF_AFTER_SALES_PROBLEMS p
		LEFT JOIN BMS_ORDER o ON p.order_id =
		o.id
		LEFT JOIN BMS_FACTORY_ORDER fo ON p.factory_id = fo.factory_id AND
		p.order_id = fo.order_id
		LEFT JOIN BMS_BASE_FACTORY f ON p.factory_id =
		f.id
		LEFT JOIN BMS_BASE_KEY k ON p.fault_level_id = k.id
		WHERE 1=1
		<if test="bus_type !=null and bus_type !=''">
			AND substring_index(p.bus_number, '-', 1) LIKE
			CONCAT('%',#{bus_type},'%')
		</if>
		<if test="customer_name !=null and customer_name !=''">
			AND p.customer_name LIKE CONCAT('%',#{customer_name},'%')
		</if>
		AND p.factory_id IN(
		select case when
		LOCATE(p.factory_id,#{factory_id})>0 then p.factory_id else
		0 end as
		factory_id
		from BMS_BASE_FACTORY )
		<if test="start_date !=null and start_date!=''">
						<![CDATA[ AND p.fault_date >= #{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
						<![CDATA[ AND p.fault_date <= #{end_date} ]]>
		</if>
		<if test="order !=null and order !=''">
			AND (p.order_describe LIKE CONCAT('%',#{order},'%') OR
			o.order_no LIKE
			CONCAT('%',#{order},'%'))
		</if>
		GROUP BY substring_index(p.bus_number, '-',
		1),p.customer_name,p.order_id,p.order_describe,p.factory_id,k.key_name
		ORDER BY substring_index(p.bus_number, '-',
		1),p.customer_name,p.order_id,p.order_describe,p.factory_id,k.id) tmp
		GROUP BY tmp.
		bus_type,tmp.customer_name,tmp.order_id,tmp.order_describe,tmp.factory_id;
	</select>
	<!-- 工厂售后问题报表 -->
	<select id="getFactoryAfterSaleProblems" parameterType="Map"
		resultType="Map">
		SELECT tmp.factory_name,GROUP_CONCAT(tmp.key_name
		,':',tmp.falut_count+'') allFalut
		FROM
		(SELECT
		f.factory_name,COUNT(p.fault_level_id) falut_count,k.key_name
		FROM
		BMS_AF_AFTER_SALES_PROBLEMS p
		LEFT JOIN BMS_ORDER o ON p.order_id =
		o.id
		LEFT JOIN BMS_FACTORY_ORDER fo ON p.factory_id = fo.factory_id AND
		p.order_id = fo.order_id
		LEFT JOIN BMS_BASE_FACTORY f ON p.factory_id =
		f.id
		LEFT JOIN BMS_BASE_KEY k ON p.fault_level_id = k.id
		WHERE 1=1
		<if test="bus_type !=null and bus_type !=''">
			AND substring_index(p.bus_number, '-', 1) LIKE
			CONCAT('%',#{bus_type},'%')
		</if>
		<if test="customer_name !=null and customer_name !=''">
			AND p.customer_name LIKE CONCAT('%',#{customer_name},'%')
		</if>
		AND p.factory_id IN(
		select case when
		LOCATE(p.factory_id,#{factory_id})>0 then p.factory_id else
		0 end as
		factory_id
		from BMS_BASE_FACTORY )
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND p.fault_date >= #{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND p.fault_date <= #{end_date} ]]>
		</if>
		<if test="order !=null and order !=''">
			AND (p.order_describe LIKE CONCAT('%',#{order},'%') OR
			o.order_no LIKE
			CONCAT('%',#{order},'%'))
		</if>

		GROUP BY p.factory_id,k.key_name
		ORDER BY
		p.factory_id,p.order_describe,k.id ) tmp
		GROUP BY tmp.factory_name
		ORDER BY tmp.factory_name
	</select>
	<!-- 车型售后问题报表 -->
	<select id="getBusTypeAfterSaleProblems" parameterType="Map"
		resultType="Map">
		SELECT tmp.bus_type,tmp.order_describe,GROUP_CONCAT(tmp.key_name
		,':',tmp.falut_count+',') allFalut
		FROM
		(SELECT
		f.factory_name,COUNT(p.fault_level_id)
		falut_count,k.key_name,p.order_id,CONCAT(IFNULL(o.order_no,''),'
		',p.order_describe) order_describe,substring_index(p.bus_number, '-',
		1) bus_type
		FROM BMS_AF_AFTER_SALES_PROBLEMS p
		LEFT JOIN BMS_ORDER o ON
		p.order_id = o.id
		LEFT JOIN BMS_FACTORY_ORDER fo ON p.factory_id =
		fo.factory_id AND
		p.order_id = fo.order_id
		LEFT JOIN BMS_BASE_FACTORY f
		ON p.factory_id = f.id
		LEFT JOIN BMS_BASE_KEY k ON p.fault_level_id =
		k.id
		WHERE 1=1
		<if test="bus_type !=null and bus_type !=''">
			AND substring_index(p.bus_number, '-', 1) LIKE
			CONCAT('%',#{bus_type},'%')
		</if>
		<if test="customer_name !=null and customer_name !=''">
			AND p.customer_name LIKE CONCAT('%',#{customer_name},'%')
		</if>
		AND p.factory_id IN(
		select case when
		LOCATE(p.factory_id,#{factory_id})>0 then p.factory_id else
		0 end as
		factory_id
		from BMS_BASE_FACTORY )
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND p.fault_date >= #{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
							<![CDATA[ AND p.fault_date <= #{end_date} ]]>
		</if>
		<if test="order !=null and order !=''">
			AND (p.order_describe LIKE CONCAT('%',#{order},'%') OR
			o.order_no LIKE
			CONCAT('%',#{order},'%'))
		</if>

		GROUP BY p.order_id,p.order_describe,k.key_name
		ORDER BY
		p.order_id,p.order_describe,k.id ) tmp
		GROUP BY tmp.order_id,
		tmp.order_describe
		ORDER BY tmp.order_id, tmp.order_describe
	</select>

	<!-- 订单售后问题报表 -->
	<select id="getOrderAfterSaleProblems" parameterType="Map"
		resultType="Map">
		SELECT tmp.*,GROUP_CONCAT(tmp.key_name ,':',tmp.falut_count+',')
		allFalut
		FROM
		(SELECT substring_index(p.bus_number, '-', 1)
		bus_type,CONCAT(IFNULL(o.order_no,''),' ',p.order_describe)
		order_describe,p.customer_name,o.order_qty,CONCAT(f.factory_name,'
		',IFNULL(fo.production_qty,'')+'','台')
		factory_name,fo.production_qty,p.order_id,p.factory_id,
		COUNT(p.fault_level_id) falut_count,k.key_name
		FROM
		BMS_AF_AFTER_SALES_PROBLEMS p
		LEFT JOIN BMS_ORDER o ON p.order_id =
		o.id
		LEFT JOIN BMS_FACTORY_ORDER fo ON p.factory_id = fo.factory_id AND
		p.order_id = fo.order_id
		LEFT JOIN BMS_BASE_FACTORY f ON p.factory_id =
		f.id
		LEFT JOIN BMS_BASE_KEY k ON p.fault_level_id = k.id
		WHERE 1=1
		<if test="bus_type !=null and bus_type !=''">
			AND substring_index(p.bus_number, '-', 1) LIKE
			CONCAT('%',#{bus_type},'%')
		</if>
		<if test="customer_name !=null and customer_name !=''">
			AND p.customer_name LIKE CONCAT('%',#{customer_name},'%')
		</if>
		AND p.factory_id IN(
		select case when
		LOCATE(p.factory_id,#{factory_id})>0 then p.factory_id else
		0 end as
		factory_id
		from BMS_BASE_FACTORY )
		<if test="start_date !=null and start_date!=''">
						<![CDATA[ AND p.fault_date >= #{start_date} ]]>
		</if>
		<if test="start_date !=null and start_date!=''">
						<![CDATA[ AND p.fault_date <= #{end_date} ]]>
		</if>
		<if test="order !=null and order !=''">
			AND (p.order_describe LIKE CONCAT('%',#{order},'%') OR
			o.order_no LIKE
			CONCAT('%',#{order},'%'))
		</if>
		GROUP BY p.order_id,p.order_describe,p.factory_id,k.key_name
		ORDER BY
		p.order_id,p.order_describe,p.factory_id,k.id) tmp
		GROUP BY
		tmp.order_id,tmp.order_describe,tmp.factory_id;
	</select>

	<!-- 售后报表end -->

	<!-- 生产报表start -->
	<!-- 成本报表 -->
	<!-- 月技改费用 -->
	<select id="getEcnCost" parameterType="Map" resultType="Map">
		SELECT
		t.workshop_name,t.all_ecn_time,t.hourCost,convert((t.all_ecn_time+0)*(t.hourCost+0),decimal(10,2))
		ecnCost FROM(
		SELECT w1.workshop_name,w1.id,CASE WHEN all_ecn_time IS
		NULL THEN 0 ELSE
		all_ecn_time END all_ecn_time,(SELECT h1.value FROM
		BMS_BASE_HZ h1
		LEFT JOIN BMS_BASE_KEY k1 ON h1.hz_type_id = k1.id
		WHERE
		k1.key_code = 'HZ_TYPE' AND k1.key_name = '技改工时费用'
		AND h1.factory_id =
		#{factory_id} AND h1.effecDateEnd = (
		SELECT MAX(h.effecDateEnd) FROM
		BMS_BASE_HZ h
		LEFT JOIN BMS_BASE_KEY k ON h.hz_type_id = k.id
		WHERE
		k.key_code = 'HZ_TYPE' AND k.key_name = '技改工时费用'
		AND h.factory_id =
		#{factory_id}
		) ) hourCost
		FROM BMS_BASE_WORKSHOP w1
		LEFT OUTER JOIN
		BMS_BASE_FACTORY f1 ON w1.factory_id = f1.id
		LEFT JOIN (SELECT
		workshop_name,sum(time) all_ecn_time,workshop_id
		FROM(
		SELECT
		w.workshop_name,t.workshop_id,COUNT(d.bus_number)*t.unit_time time
		FROM BMS_ECN_TASK_DETAIL d
		LEFT OUTER JOIN BMS_BASE_FACTORY f ON
		d.factory_id = f.id
		LEFT OUTER JOIN BMS_ECN_TIME t ON d.ecn_task_id =
		t.ecn_task_id
		LEFT JOIN BMS_BASE_WORKSHOP w ON t.workshop_id = w.id AND
		w.factory_id =
		d.factory_id
		WHERE 1=1 AND d.status='1'
															<![CDATA[	AND d.confirmor_date >=#{start_date} AND d.confirmor_date <=#{end_date} ]]>
		AND f.id IN (select case when LOCATE(xx.id,'16')>0 then xx.id else 0
		end as factory_id
		from BMS_BASE_FACTORY xx )
		GROUP BY
		w.id,d.ecn_task_id) z
		GROUP BY z.workshop_name ORDER BY z.workshop_id )
		u ON w1.id =
		u.workshop_id

		WHERE f1.id in(
		select case when
		LOCATE(xx.id,#{factory_id})>0 then xx.id else 0 end as
		factory_id
		from
		BMS_BASE_FACTORY xx )
		AND w1.workshop_name NOT IN('检测线','调试区','成品库')
		GROUP BY w1.workshop_name ORDER BY w1.id ) t GROUP BY t.workshop_name
		ORDER
		BY t.id
	</select>

	<!-- 各车间单车制造费用 -->
	<select id="getSingleBusManufacturingCost" parameterType="Map"
		resultType="Map">
		select
		machine_cost,
		other_materials_cost,
		other_cost,
		tooling_cost,
		fuel_power_cost,
		labor_cost,
		BMS_BASE_KEY.key_name
		from
		BMS_COST_SINGLEBUS_MANUFACTURING,BMS_BASE_KEY
		where
		BMS_COST_SINGLEBUS_MANUFACTURING.cost_department_id = BMS_BASE_KEY.id
		and BMS_COST_SINGLEBUS_MANUFACTURING.factory_id = #{factory_id}
		and
		BMS_COST_SINGLEBUS_MANUFACTURING.cost_month = #{cost_month}
	</select>

	<!-- 各车间月制造费用 -->
	<select id="getClassificationCost" parameterType="Map"
		resultType="Map">
		select
		machine_cost,
		other_materials_cost,
		other_cost,
		tooling_cost,
		fuel_power_cost,
		labor_cost,
		BMS_BASE_KEY.key_name
		from
		BMS_COST_CLASSIFICATION,BMS_BASE_KEY
		where
		BMS_COST_CLASSIFICATION.cost_department_id = BMS_BASE_KEY.id
		and
		BMS_COST_CLASSIFICATION.factory_id = #{factory_id}
		and
		BMS_COST_CLASSIFICATION.cost_month = #{cost_month}
		and
		BMS_COST_CLASSIFICATION.cost_department_id = #{cost_department_id}
	</select>

	<!-- 各工厂总共制造费用 -->
	<select id="getTotalCost" parameterType="Map" resultType="Map">
		select
		sum(machine_cost) as machine_cost,
		sum(other_materials_cost) as
		other_materials_cost,
		sum(other_cost) as other_cost,
		sum(tooling_cost)
		as tooling_cost,
		sum(fuel_power_cost) as fuel_power_cost,
		sum(labor_cost) as labor_cost,
		BMS_BASE_FACTORY.factory_name
		from
		BMS_COST_CLASSIFICATION,BMS_BASE_FACTORY
		where
		BMS_COST_CLASSIFICATION.factory_id = BMS_BASE_FACTORY.id
		and
		BMS_COST_CLASSIFICATION.cost_month = #{cost_month}
		GROUP BY factory_id
	</select>

	<!-- 成本报表end -->
	<!-- 生产报表start -->
	<select id="queryProductionDaily" parameterType="Map"
		resultType="Map">
		select
		distinct
		a.*,b.repair_offline_num,b.repair_online_num,c.employees,c.arrivals_qty,c.working_hours,d.plan_qty,e.exception_flag
		from
		(SELECT sum(case when k.key_name like '%上线%' then 1 else 0 end )
		online_num,
		sum(case when k.key_name like '%下线%' then 1 else 0 end)
		offline_num,
		s.factory_name,s.workshop_name,s.line_name,o.order_no
		FROM
		BMS_PD_SCAN
		s
		left join BMS_BASE_PROCESS p on s.process_id=p.id
		left join
		BMS_BASE_KEY k on p.plan_node_id=k.id
		left join BMS_PLAN_BUS
		b on
		s.bus_number=b.bus_number
		left join BMS_ORDER o on b.order_id
		=o.id
		where s.factory_name=#{factoryName} and
		s.workshop_name=#{workshopName}
		and k.key_name in
		(CONCAT(#{workshopName},'上线'),CONCAT(#{workshopName},'下线') ) and
		s.scan_time like CONCAT('%',#{queryDate},'%')
		group by
		o.order_no,s.line_name) a
		left join
		(
		select count(distinct
		s.bus_number)repair_offline_num,count(distinct s1.bus_number)
		repair_online_num,s.line_name,o.order_no
		from BMS_PD_SCAN s
		left join
		BMS_PLAN_BUS b on s.bus_number=b.bus_number
		left join BMS_ORDER o on
		b.order_id =o.id
		left join BMS_PD_SCAN s1 on s.id=s1.id and
		s1.onlineflag=1
		where s.factory_name=#{factoryName} and
		s.workshop_name=#{workshopName} and s.repair=1 and
		s.scan_time like
		CONCAT('%',#{queryDate},'%')
		group by o.order_no,s.line_name
		) b on
		a.order_no =b.order_no and a.line_name=b.line_name
		left join
		(select
		h.employees,h.arrivals_qty,f.factory_name,w.workshop_name,h.working_hours
		from BMS_PD_PRODUCTION_HOURS h
		left join BMS_BASE_FACTORY f on
		h.factory_id=f.id
		left join BMS_BASE_WORKSHOP w on h.workshop_id=w.id
		where date =replace(#{queryDate},'-','')
		) c on
		a.factory_name=c.factory_name and
		a.workshop_name=c.workshop_name
		left
		join
		(
		select sum(p.plan_qty) plan_qty,#{factoryName}
		factory_name,#{workshopName} workshop_name from
		BMS_PLAN_PRODUCTION_PLAN p
		left join BMS_BASE_KEY k on
		p.plan_code_id=k.id
		left join BMS_BASE_FACTORY f on p.factory_id=f.id
		where plan_date=replace(#{queryDate},'-','') and
		f.factory_name=#{factoryName} and
		k.key_name=CONCAT(#{workshopName},'下线')
		) d
		on
		a.factory_name=d.factory_name and a.workshop_name=d.workshop_name
		left
		join (
		select case when count(e.id) >0 then '有' else '无' end as
		exception_flag
		,#{factoryName} factory_name,#{workshopName}
		workshop_name
		from BMS_PD_PRODUCTION_EXCEPTION e
		left join
		BMS_BASE_FACTORY f on e.factory_id=f.id
		left join BMS_BASE_WORKSHOP w
		on e.workshop_id=w.id
		where f.factory_name=#{factoryName} and
		w.workshop_name=#{workshopName} and e.start_time like
		CONCAT('%',#{queryDate},'%')
		) e on a.factory_name=e.factory_name and
		a.workshop_name=e.workshop_name;

	</select>
	<select id="queryProductionDailyChart" parameterType="Map"
		resultType="Map">
		select a.workshop_name, a.online_total,a.offline_total,
		c.repair_offline_num,
		c.repair_online_num, convert(a.offline_total /
		d.plan_qty*100,decimal(10,2)) as plan_rate
		from(SELECT sum(case when
		k.key_name like '%上线%' then 1 else 0 end ) online_total, sum(case when
		k.key_name like '%下线%' then 1 else 0 end) offline_total,
		s.factory_name,s.workshop_name FROM BMS_PD_SCAN s
		left join
		BMS_BASE_PROCESS p on s.process_id=p.id left join
		BMS_BASE_KEY k on
		p.plan_node_id=k.id left join BMS_PLAN_BUS b on
		s.bus_number=b.bus_number
		left join BMS_ORDER o on b.order_id =o.id
		where s.workshop_name in ('焊装','玻璃钢','涂装','底盘','总装') and k.key_name in
		(CONCAT(s.workshop_name,'上线'),CONCAT(s.workshop_name,'下线') )
		and
		s.factory_name =#{factoryName} and s.scan_time >CONCAT(date_sub(#{queryDate},interval 1 day),' 17:10:00')
		and s.scan_time &lt;=CONCAT(#{queryDate},' 17:10:00')
		group by s.workshop_name) a
		left join
		(
		select (count(distinct s.bus_number)
		)repair_offline_num,count(distinct
		s1.bus_number)
		repair_online_num,s.workshop_name
		from BMS_PD_SCAN s
		left join
		BMS_PLAN_BUS b on s.bus_number=b.bus_number
		left join BMS_ORDER o on
		b.order_id =o.id
		left join BMS_PD_SCAN s1 on s.id=s1.id and
		s1.onlineflag=1
		where s.factory_name=#{factoryName} and s.workshop_name
		in
		('焊装','玻璃钢','涂装','底盘','总装' ) and s.repair=1 and s.scan_time >CONCAT(date_sub(#{queryDate},interval 1 day),' 17:10:00')
		and s.scan_time &lt;=CONCAT(#{queryDate},' 17:10:00')
		group by s.workshop_name) c
		on
		a.workshop_name=c.workshop_name
		left join
		(select sum(p.plan_qty)
		plan_qty,replace(k.key_name,'下线','' ) workshop_name
		from
		BMS_PLAN_PRODUCTION_PLAN p
		left join BMS_BASE_KEY k on
		p.plan_code_id=k.id
		left join BMS_BASE_FACTORY f on p.factory_id=f.id
		where plan_date=replace(#{queryDate},'-','') and
		f.factory_name=#{factoryName} and
		k.key_name in (
		CONCAT('焊装','下线'),CONCAT('玻璃钢','下线'),CONCAT('涂装','下线'),CONCAT('底盘','下线'),CONCAT('总装','下线'))
		group by replace(k.key_name,'下线','' )
		)d on
		a.workshop_name=d.workshop_name
	</select>

	<select id="queryPauseReportData" parameterType="Map"
		resultType="Map">
		<![CDATA[
	select group_concat( tmp.workshop_name,':',tmp.pause_hour) pause_group_info,tmp.reason_type
	from(
	select  round(sum(TIMESTAMPDIFF(second,a.start_time,a.finish_time )/3600-(datediff(a.finish_time,a.start_time))*16),1) pause_hour,
	a.reason_type,a.workshop_name
	from (
	SELECT e.bus_number,e.start_time,
	case when e.finish_time is null  then concat(#{endDate},' 17:00:00')
	when e.finish_time ='' then concat(#{endDate},' 17:00:00') 
	when e.finish_time>concat(#{endDate},' 17:00:00') then concat(#{endDate},' 17:00:00')
	else e.finish_time end as finish_time,k.key_name reason_type,w.workshop_name
	FROM BMS_PD_PRODUCTION_EXCEPTION e 
	left join BMS_BASE_KEY k on e.reason_type_id=k.id
	left join BMS_BASE_WORKSHOP w on e.workshop_id=w.id
	where e.factory_id=#{factoryId} and e.exception_type=1 and substring(e.start_time,1,10)>=#{startDate} and substring(e.start_time,1,10)<=#{endDate} ) a
	group by a.workshop_name,a.reason_type) tmp
	group by tmp.reason_type
	]]>
	</select>
	<select id="queryPausePieData" parameterType="Map" resultType="Map">
	<![CDATA[
	select  round(sum(TIMESTAMPDIFF(second,a.start_time,a.finish_time )/3600-(datediff(a.finish_time,a.start_time))*16),1) pause_hour,a.reason_type
	from (
	SELECT e.bus_number,e.start_time,
	case when e.finish_time is null  then concat(#{endDate},' 17:00:00')
	when e.finish_time ='' then concat(#{endDate},' 17:00:00') 
	when e.finish_time>concat(#{endDate},' 17:00:00') then concat(#{endDate},' 17:00:00')
	else e.finish_time end as finish_time,k.key_name reason_type,w.workshop_name
	FROM BMS_PD_PRODUCTION_EXCEPTION e 
	left join BMS_BASE_KEY k on e.reason_type_id=k.id
	left join BMS_BASE_WORKSHOP w on e.workshop_id=w.id
	where e.factory_id=#{factoryId} and e.exception_type=1 and substring(e.start_time,1,10)>=#{startDate} and substring(e.start_time,1,10)<=#{endDate}) a
	group by a.reason_type;
	]]>
	</select>

	<select id="queryExceptionReportData" parameterType="Map"
		resultType="Map">
	<![CDATA[
	select group_concat(tmp.c_date,':',tmp.exception_count) exception_info,tmp.workshop_name
	from(
	select w.workshop_name,substring(e.edit_date,1,10) c_date,count(e.bus_number) exception_count
	from BMS_PD_PRODUCTION_EXCEPTION e
	left join BMS_BASE_WORKSHOP w on e.workshop_id=w.id
	where e.factory_id=#{factoryId} and e.exception_type=0 and substring(e.edit_date,1,10)>=#{startDate} and substring(e.edit_date,1,10)<=#{endDate} 
	group by w.workshop_name,substring(e.edit_date,1,10)) tmp
	group by tmp.workshop_name
	]]>
	</select>
	<!-- 生产报表end -->
	<!-- 品质报表start -->
	<!-- DUP报表 数据查询 -->
	<select id="queryDPUData" parameterType="Map" resultType="Map">
		<if test="queryItem=='day'">
		<![CDATA[
		select
		a.*,b.target_val from(
		select count(distinct h.bus_number) bus_num, count( t.result_judge)
		bug_num,substring(h.edit_date,1,10) item,h.workshop_id,h.factory_id
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on
		h.id=t.test_card_id
		where h.workshop_id=#{workshopId} and t.result_judge ='不合格' and substring(h.edit_date,1,10)
		>=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} and h.factory_id=#{factoryId}
		group by substring(h.edit_date,1,10) ) a
		left join (
		select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
		from BMS_QM_QUALITY_TARGET_PARAMETER  p
		left join BMS_BASE_KEY k on p.target_type=k.id 
		where k.key_name='DPU' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
		select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
		left join BMS_BASE_KEY k on p1.target_type=k.id 
		where k.key_name='DPU' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
		)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id		
		]]>
		</if>

		<if test="queryItem=='week'">	
		<![CDATA[
		select a.*,b.target_val from(
		select  count(distinct h.bus_number) bus_num, count(t.result_judge) bug_num,(week(h.edit_date) -week(#{startDate})+1) item,h.workshop_id,h.factory_id
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id 
		where  h.workshop_id=#{workshopId} and h.factory_id=#{factoryId} and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
		group by week(h.edit_date)) a
		left join (
		select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
		from BMS_QM_QUALITY_TARGET_PARAMETER  p
		left join BMS_BASE_KEY k on p.target_type=k.id 
		where k.key_name='DPU' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
		select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
		left join BMS_BASE_KEY k on p1.target_type=k.id 
		where k.key_name='DPU' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
		)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id	
		]]>
		</if>

		<if test="queryItem=='month'">
		<![CDATA[
		select a.*,b.target_val
		from(
		select  count(distinct h.bus_number) bus_num, count(t.result_judge) bug_num,month(h.edit_date) item,h.workshop_id,h.factory_id
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id 
		where  h.workshop_id=#{workshopId}   and h.factory_id=#{factoryId} and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
		group by month(h.edit_date)) a
		left join (
		select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
		from BMS_QM_QUALITY_TARGET_PARAMETER  p
		left join BMS_BASE_KEY k on p.target_type=k.id 
		where k.key_name='DPU' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
		select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
		left join BMS_BASE_KEY k on p1.target_type=k.id 
		where k.key_name='DPU' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
		)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id	
		]]>
		</if>

		<if test="queryItem=='order'">
		<![CDATA[
		select a.*,b.target_val
		from(
		select  count(distinct h.bus_number) bus_num, count( t.result_judge)  bug_num,CONCAT(o.order_no,o.order_name,b.bus_type_code,o.order_qty+'' ) item ,h.workshop_id,h.factory_id
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id 
		left join BMS_ORDER o on h.order_id=o.id
		left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
		where  h.workshop_id=#{workshopId}  and h.factory_id=#{factoryId} and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
		group by o.order_no) a
		left join (
		select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
		from BMS_QM_QUALITY_TARGET_PARAMETER  p
		left join BMS_BASE_KEY k on p.target_type=k.id 
		where k.key_name='DPU' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
		select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
		left join BMS_BASE_KEY k on p1.target_type=k.id 
		where k.key_name='DPU' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
		)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id		
		]]>
		</if>
	</select>
	<select id="queryDPUDetail" parameterType="Map" resultType="Map">
	<![CDATA[
			select  h.bus_number,l.bug bug,h.edit_date,u.username,f.factory_name,w.workshop_name,t.memo
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result)
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			where h.workshop_id=#{workshopId} and h.factory_id=#{factoryId}  and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
			order by h.edit_date desc
	]]>
		<if test="offset!=null">
			LIMIT #{offset} ,#{pageSize}
		</if>
	</select>
	<select id="queryDPUDetailCount" parameterType="Map" resultType="int">
	<![CDATA[
		select  count(h.bus_number)
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result)
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			where h.workshop_id=#{workshopId} and h.factory_id=#{factoryId}  and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
	]]>
	</select>
	<!-- 一次校检合格率报表 数据查询 -->
	<select id="queryPassRateData" parameterType="Map" resultType="Map">
		<if test="queryItem=='day'">
			<if test="workshopName=='部件'">
			<![CDATA[
				select a.*,b.target_val 
				from( 
				select count(h.parts_num) bus_total, h.factory_id,19 workshop_id,count(h1.parts_num) bus_ok_num,substring(h.edit_date,1,10) item 
				from BMS_QM_TEST_RECORD_HEADER h left join BMS_QM_TEST_RECORD_HEADER h1 on h.id=h1.id and h1.test_result='0' 
				where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
				group by substring(h.edit_date,1,10)) a 
				left join ( 
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id 
				from BMS_QM_QUALITY_TARGET_PARAMETER p 
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId}
				and p.eend_date=( select max(p1.eend_date) from BMS_QM_QUALITY_TARGET_PARAMETER p1 left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId} )) b on a.factory_id=b.factory_id;
			]]>
			</if>
			<if test="workshopName!='部件'">
			<![CDATA[
				select a.*,b.target_val from(
				select count(h.bus_number) bus_total, h.factory_id,h.workshop_id,count(h1.bus_number) bus_ok_num,substring(h.edit_date,1,10) item
				from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_HEADER h1 on h.id=h1.id and h1.test_result='0'
				where h.factory_id=#{factoryId} and h.workshop_id=#{workshopId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
				group by substring(h.edit_date,1,10)) a
				left join 
				(
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
				from BMS_QM_QUALITY_TARGET_PARAMETER  p
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
				select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
				left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
				)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id
			]]>
			</if>

		</if>
		<if test="queryItem=='week'">
			<if test="workshopName=='部件'">
			<![CDATA[
				select a.*,b.target_val 
				from( 
				select count(h.parts_num) bus_total, h.factory_id,19 workshop_id,count(h1.parts_num) bus_ok_num,week(h.edit_date) -week(#{startDate})+1 item
				from BMS_QM_TEST_RECORD_HEADER h left join BMS_QM_TEST_RECORD_HEADER h1 on h.id=h1.id and h1.test_result='0' 
				where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
				group by week(h.edit_date)) a 
				left join ( 
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id 
				from BMS_QM_QUALITY_TARGET_PARAMETER p 
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId}
				and p.eend_date=( select max(p1.eend_date) from BMS_QM_QUALITY_TARGET_PARAMETER p1 left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId} )) b on a.factory_id=b.factory_id 
			]]>
			</if>
			<if test="workshopName!='部件'">
			<![CDATA[
				select a.*,b.target_val from(
				select count(h.bus_number) bus_total, h.factory_id,h.workshop_id,count(h1.bus_number) bus_ok_num,week(h.edit_date) -week(#{startDate})+1 item
				from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_HEADER h1 on h.id=h1.id and h1.test_result='0'
				where h.factory_id=#{factoryId} and h.workshop_id=#{workshopId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
				group by week(h.edit_date) ) a
				left join 
				(
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
				from BMS_QM_QUALITY_TARGET_PARAMETER  p
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
				select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
				left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
				)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id
			]]>
			</if>

		</if>
		<if test="queryItem=='month'">
			<if test="workshopName=='部件'">
			<![CDATA[
				select a.*,b.target_val 
				from( 
				select count(h.parts_num) bus_total, h.factory_id,19 workshop_id,count(h1.parts_num) bus_ok_num,month(h.edit_date) item
				from BMS_QM_TEST_RECORD_HEADER h left join BMS_QM_TEST_RECORD_HEADER h1 on h.id=h1.id and h1.test_result='0' 
				where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
				group by month(h.edit_date)) a 
				left join ( 
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id 
				from BMS_QM_QUALITY_TARGET_PARAMETER p 
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId}
				and p.eend_date=( select max(p1.eend_date) from BMS_QM_QUALITY_TARGET_PARAMETER p1 left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId} )) b on a.factory_id=b.factory_id 
			]]>
			</if>
			<if test="workshopName!='部件'">
			<![CDATA[
				select a.*,b.target_val from(
				select count(h.bus_number) bus_total, h.factory_id,h.workshop_id,count(h1.bus_number) bus_ok_num,month(h.edit_date) item
				from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_HEADER h1 on h.id=h1.id and h1.test_result='0'
				where h.factory_id=#{factoryId} and h.workshop_id=#{workshopId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
				group by month(h.edit_date) ) a
				left join 
				(
				select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
				from BMS_QM_QUALITY_TARGET_PARAMETER  p
				left join BMS_BASE_KEY k on p.target_type=k.id 
				where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
				select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
				left join BMS_BASE_KEY k on p1.target_type=k.id 
				where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
				)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id
			]]>
			</if>
			<if test="queryItem=='order'">
				<if test="workshopName=='部件'">
				<![CDATA[
					select a.*,b.target_val from(
					select count(h.parts_num) bus_total, h.factory_id,19 workshop_id,count(h1.parts_num) bus_ok_num,CONCAT(o.order_no,o.order_name,b.bus_type_code,o.order_qty+'' )  item
					from BMS_QM_TEST_RECORD_HEADER h left join BMS_QM_TEST_RECORD_HEADER h1 on h.id=h1.id and h1.test_result='0'
					left join BMS_ORDER o on h.order_id=o.id
					left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
					where h.factory_id=#{factoryId} and h.workshop_id=#{workshopId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
					group by o.order_no ) a
					left join 
					(
					select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
					from BMS_QM_QUALITY_TARGET_PARAMETER  p
					left join BMS_BASE_KEY k on p.target_type=k.id 
					where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
					select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
					left join BMS_BASE_KEY k on p1.target_type=k.id 
					where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
					)) b on a.factory_id=b.factory_id 
				]]>
				</if>
				<if test="workshopName!='部件'">
				<![CDATA[
					select a.*,b.target_val from(
					select count(h.bus_number) bus_total, h.factory_id,h.workshop_id,count(h1.bus_number) bus_ok_num,CONCAT(o.order_no,o.order_name,b.bus_type_code,o.order_qty+'' )  item
					from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_HEADER h1 on h.id=h1.id and h1.test_result='0'
					left join BMS_ORDER o on h.order_id=o.id
					left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
					where h.factory_id=#{factoryId} and h.workshop_id=#{workshopId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} 
					group by o.order_no ) a
					left join 
					(
					select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
					from BMS_QM_QUALITY_TARGET_PARAMETER  p
					left join BMS_BASE_KEY k on p.target_type=k.id 
					where k.key_name='一次交检合格率' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
					select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
					left join BMS_BASE_KEY k on p1.target_type=k.id 
					where k.key_name='一次交检合格率' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
					)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id
				]]>
				</if>
			</if>

		</if>
	</select>
	<select id="queryPassRateDetail" parameterType="Map" resultType="Map">
		<if test="workshopName!='部件'">
		<![CDATA[
			select  h.bus_number,h.tester,h.qe,h.edit_date,u.username,f.factory_name,w.workshop_name,CONCAT(o.order_no,o.order_name,b.bus_type_code,o.order_qty+'' ) c_order
			from BMS_QM_TEST_CARD_HEADER h 
			left join BMS_ORDER o on h.order_id=o.id
			left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			where h.workshop_id=#{workshopId}  and h.factory_id=#{factoryId} and h.test_result='0'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}  
			group by h.bus_number
			order by h.edit_date desc	
		]]>
		</if>
		<if test="workshopName=='部件'">
		<![CDATA[
			select  h.parts_num bus_number,h.tester,'' qe,h.edit_date,u.username,f.factory_name,'部件' workshop_name,CONCAT(o.order_no,o.order_name,b.bus_type_code,o.order_qty+'' ) c_order
			from BMS_QM_TEST_RECORD_HEADER h 
			left join BMS_ORDER o on h.order_id=o.id
			left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			where  h.factory_id=#{factoryId} and h.test_result='0'  and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			group by h.parts_num
			order by h.edit_date desc
		]]>
		</if>

		<if test="offset!=null">
			LIMIT #{offset} ,#{pageSize}
		</if>
	</select>
	<select id="queryPassRateDetailCount" parameterType="Map"
		resultType="int">
		<if test="workshopName!='部件'">
		<![CDATA[
			select  count(distinct h.bus_number)
			from BMS_QM_TEST_CARD_HEADER h 
			left join BMS_ORDER o on h.order_id=o.id
			left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			where h.workshop_id=#{workshopId} and h.factory_id=#{factoryId}  and h.test_result='0'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
		]]>
		</if>
		<if test="workshopName=='部件'">
		<![CDATA[
			select  count(distinct h.parts_num)
			from BMS_QM_TEST_RECORD_HEADER h 
			left join BMS_ORDER o on h.order_id=o.id
			left join BMS_BASE_BUS_TYPE b on o.bus_type_id=b.id
			left join BMS_BASE_USER u on h.editor_id=u.id
			left join BMS_BASE_FACTORY f on f.id=h.factory_id
			where h.factory_id=#{factoryId}  and h.test_result='0'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
		]]>
		</if>

	</select>
	<!-- 制程问题严重等级分布报表 数据查询 -->
	<select id="queryProcessProblemData" parameterType="Map"
		resultType="Map">
		<!-- select group_concat(tmp.workshop_name,':',bug_count+'')bug_desc,tmp.serious_level
		from (
		select  count(l.serious_level) bug_count,l.serious_level,w.workshop_name
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result)
		left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
		where h.factory_id=#{factoryId}  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}  and l.serious_level is not null and t.test_result !=''
		group by h.workshop_id,l.serious_level
		union all
		select count(l.serious_level) bug_count,l.serious_level,w.workshop_name
		from BMS_QM_TEST_RECORD_DETAIL d 
		left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
		left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
		where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}  and l.serious_level is not null and d.test_result !=''
		group by d.workshop_id,l.serious_level
		) tmp group by tmp.serious_level -->
		
	<![CDATA[
		select group_concat(tmp.workshop_name,':',bug_count+'')bug_desc,tmp.serious_level
		from (
		select count(l.serious_level) bug_count,l.serious_level,tmp.workshop_name
		from(select  t.test_result,w.workshop_name,h.workshop_id
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} and t.test_result !='' ) tmp
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result)>0
		where l.serious_level is not null
		group by tmp.workshop_id,l.serious_level
		union all
		select count(l.serious_level) bug_count,l.serious_level,tmp.workshop_name
		from(select d.test_result,w.workshop_name,d.workshop_id
			from BMS_QM_TEST_RECORD_DETAIL d 
			left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
			left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
			where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate} and d.test_result !='') tmp
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result)>0
		where l.serious_level is not null
		group by tmp.workshop_id,l.serious_level
		) tmp group by tmp.serious_level
	]]>
	</select>
	<select id="queryProcessProblemDetail" parameterType="Map"
		resultType="Map">
		<!-- select * from (
			select l.bug,l.serious_level,w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
			from BMS_QM_TEST_RECORD_DETAIL d 
			left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
			left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
			left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where h.factory_id=#{factoryId}  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate} 
			and l.serious_level is not null and d.test_result !='' and k.key_code='WORKGROUP'
			group by  l.bug,l.serious_level,w.workshop_name,k.key_name 
			union all
			select  l.bug,l.serious_level,w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result) 
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where l.serious_level is not null and substring(h.edit_date,1,10)>=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId}  and t.test_result !='' and k.key_code='WORKGROUP'		
			group by  l.bug,l.serious_level,w.workshop_name,k.key_name ) tmp
		order by tmp.workshop_name,tmp.serious_level desc -->
	<![CDATA[	
		select * from (
		   select l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name,count(l.bug) bug_count
		   from(
			select w.workshop_name,k.key_name workgroup_name,d.test_result
				from BMS_QM_TEST_RECORD_DETAIL d 
				left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
				left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
				left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
				left join BMS_BASE_KEY k on k.id=g.workgroup_id
				where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
				and d.test_result !='' and k.key_code='WORKGROUP') tmp
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result) 
			where  l.serious_level is not null
			group by  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name 
		union all
		select  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name,count(l.bug) bug_count
		from(select w.workshop_name,k.key_name workgroup_name,t.test_result
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where substring(h.edit_date,1,10)>=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId} and t.test_result !='' and k.key_code='WORKGROUP') tmp
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result) 
		where l.serious_level is not null		
		group by  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name) tmp
	order by tmp.workshop_name,tmp.serious_level desc
	]]>
		<if test="offset!=null">
			LIMIT #{offset} ,#{pageSize}
		</if>
	</select>
	<select id="queryProcessProblemCount" parameterType="Map"
		resultType="int">
			<!-- 	select count(tmp.bug) from (
			select l.bug,l.serious_level,w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
			from BMS_QM_TEST_RECORD_DETAIL d 
			left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
			left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
			left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where h.factory_id=#{factoryId}  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate} 
			and l.serious_level is not null and d.test_result !='' and k.key_code='WORKGROUP'
			group by  l.bug,l.serious_level,w.workshop_name,k.key_name 
			union all
			select  l.bug,l.serious_level,w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result) 
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where l.serious_level is not null and substring(h.edit_date,1,10)>=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId}  and t.test_result !='' and k.key_code='WORKGROUP'		
			group by  l.bug,l.serious_level,w.workshop_name,k.key_name ) tmp -->
			
	<![CDATA[
			select count(tmp.bug) from (
			 select l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name,count(l.bug) bug_count
		   	 from(
				select w.workshop_name,k.key_name workgroup_name,d.test_result
				from BMS_QM_TEST_RECORD_DETAIL d 
				left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
				left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
				left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
				left join BMS_BASE_KEY k on k.id=g.workgroup_id
				where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
				and d.test_result !='' and k.key_code='WORKGROUP') tmp
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result) 
			where  l.serious_level is not null
			group by  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name 
		union all
		select  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name,count(l.bug) bug_count
		from(select w.workshop_name,k.key_name workgroup_name,t.test_result
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
			left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
			where substring(h.edit_date,1,10)>=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId} and t.test_result !='' and k.key_code='WORKGROUP') tmp
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,tmp.test_result) 
		where l.serious_level is not null		
		group by  l.bug,l.serious_level,tmp.workshop_name,tmp.workgroup_name) tmp
	]]>
	</select>
	<!-- 品质班组评分报表 数据查询 -->
	<select id="queryDPUScore" parameterType="Map" resultType="Map">
	<![CDATA[
		select ifnull(round((b.target_val-a.bug_num/a.bus_num)/b.target_val*50,1),0) dpu_score,a.item,a.workshop_name,a.key_name workgroup_name
		from(
		select  count(distinct h.bus_number) bus_num, count(t.result_judge) bug_num,(week(h.edit_date) -week(#{startDate} )+1) item,h.workshop_id,h.factory_id,t.workgroup_id,k.key_name,w.workshop_name
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id 
		left join BMS_BASE_WORKSHOP w on h.workshop_id=w.id
		left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
		left join BMS_BASE_KEY k on k.id=g.workgroup_id
		where  h.workshop_id=#{workshopId} and h.factory_id=#{factoryId} and t.result_judge ='不合格'  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate} 
		group by week(h.edit_date),t.workgroup_id) a
		left join (
		select max(p.target_value) target_val,p.eend_date,p.factory_id,p.workshop_id
		from BMS_QM_QUALITY_TARGET_PARAMETER  p
		left join BMS_BASE_KEY k on p.target_type=k.id 
		where k.key_name='DPU' and p.factory_id=#{factoryId} and p.workshop_id=#{workshopId} and p.eend_date=(
		select max(p1.eend_date) from  BMS_QM_QUALITY_TARGET_PARAMETER  p1
		left join BMS_BASE_KEY k on p1.target_type=k.id 
		where k.key_name='DPU' and p1.factory_id=#{factoryId} and p1.workshop_id=#{workshopId}
		)) b on a.factory_id=b.factory_id and a.workshop_id=b.workshop_id
		where a.key_name is not null
	]]>
	</select>
	<select id="queryProcessProlemScore" parameterType="Map"
		resultType="Map">
		<if test="workshopName!='部件'">
	<![CDATA[
		select sum(tmp.serious_score) bug_score,tmp.item,tmp.workshop_name,tmp.workgroup_name
		from(
		select  case l.serious_level when 'S' then 50 when 'A' then 5*count(l.bug) when 'B' then 3*count(l.bug) when 'C' then 1*count(l.bug) else 0 end as serious_score,
		(week(h.edit_date) -week(#{startDate})+1) item, w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
		from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result)
		left join BMS_BASE_WORKSHOP w on w.id=h.workshop_id
		left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
		left join BMS_BASE_KEY k on k.id=g.workgroup_id
		where l.serious_level is not null and substring(h.edit_date,1,10)>=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate} and h.factory_id=#{factoryId}   
		and t.test_result !='' and k.key_code='WORKGROUP' and h.workshop_id=#{workshopId}
		group by  week(h.edit_date),w.workshop_name,k.key_name,l.serious_level)tmp
		group by tmp.item,tmp.workshop_name,tmp.workgroup_name
	]]>
		</if>
		<if test="workshopName=='部件'">
	<![CDATA[
		select sum(tmp.serious_score) bug_score,tmp.item,tmp.workshop_name,tmp.workgroup_name
		from(
		select case l.serious_level when 'S' then 50 when 'A' then 5*count(l.bug) when 'B' then 3*count(l.bug) when 'C' then 1*count(l.bug) else 0 end as serious_score,
		(week(h.edit_date) -week(#{startDate})+1) item, w.workshop_name,k.key_name workgroup_name,count(l.bug) bug_count
		from BMS_QM_TEST_RECORD_DETAIL d 
		left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
		left join BMS_BASE_WORKSHOP w on d.workshop_id=w.id
		left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
		left join BMS_BASE_KEY k on k.id=g.workgroup_id
		where h.factory_id=#{factoryId}  and substring(h.edit_date,1,10) >=#{startDate}  and substring(h.edit_date,1,10) <=#{endDate} and l.serious_level is not null 
		and d.test_result !='' and k.key_code='WORKGROUP' and d.workshop_id=#{workshopId}
		group by week(h.edit_date),w.workshop_name,k.key_name,l.serious_level )tmp
		group by tmp.item,tmp.workshop_name,tmp.workgroup_name
	]]>
		</if>
	</select>
	<select id="queryWorkgroupList" parameterType="Map" resultType="Map">
		select distinct s.workshop_name,k.key_name workgroup_name
		from
		BMS_BASE_WORKGROUP w
		left join BMS_BASE_WORKSHOP s on
		w.wrokshop_id=s.id
		left join
		BMS_BASE_FACTORY f on s.factory_id=f.id
		left join BMS_BASE_KEY k on
		k.id=w.workgroup_id and
		k.key_code='WORKGROUP'
		where
		w.wrokshop_id=#{workshopId} and
		f.id=#{factoryId}
	</select>
	<!-- 车间制程问题报表 数据查询 -->
	<select id="queryWProcessProblemData" parameterType="Map"
		resultType="Map">
		<if test="workshopName=='部件'">
	<![CDATA[
		select l.bug_type,count(l.bug) bug_count
		from BMS_QM_TEST_RECORD_DETAIL d 
		left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id 
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
		where h.factory_id=#{factoryId}  and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
		and d.test_result !='' and l.bug_type!=''
		group by l.bug_type
	]]>
		</if>
		<if test="workshopName!='部件'">
	<![CDATA[
		select  l.bug_type,count(l.bug) bug_count
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result) 
			where l.serious_level is not null and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId} and t.test_result !='' and h.workshop_id=#{workshopId} and l.bug_type!=''
		group by l.bug_type
	]]>
		</if>
	</select>
	<select id="queryWProcessProblemDetail" parameterType="Map"
		resultType="Map">
		<if test="workshopName=='部件'">
	<![CDATA[
		select p.parts_name item,l.bug_type,l.bug,k.key_name workgroup
		from BMS_QM_TEST_RECORD_DETAIL d 
		left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id 
		left join BMS_BASE_PARTS p on p.id=h.parts_id
		left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
		left join BMS_BASE_WORKGROUP g on d.workgroup_id=g.id
		left join BMS_BASE_KEY k on k.id=g.workgroup_id
		where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
		and d.test_result !='' and l.bug_type!='' and k.key_code='WORKGROUP'
		order by l.bug_type
	]]>
		</if>
		<if test="workshopName!='部件'">
	<![CDATA[
		select  l.bug,l.serious_level,l.bug_type,h.bus_number item,k.key_name workgroup
			from BMS_QM_TEST_CARD_DETAIL t left join  BMS_QM_TEST_CARD_HEADER h on h.id=t.test_card_id
			left join BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result) 
			left join BMS_BASE_WORKGROUP g on t.workgroup_id=g.id
			left join BMS_BASE_KEY k on k.id=g.workgroup_id
		where l.serious_level is not null and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId} and t.test_result !='' and h.workshop_id=#{workshopId} and l.bug_type!='' and k.key_code='WORKGROUP'
		order by l.bug_type
	]]>
		</if>
		<if test="offset!=null">
			LIMIT #{offset} ,#{pageSize}
		</if>
	</select>
	<select id="queryWProcessProblemCount" parameterType="Map"
		resultType="int">
		<if test="workshopName=='部件'">
	<![CDATA[
		select count(l.bug) 
		from BMS_QM_TEST_RECORD_DETAIL d 
		left join BMS_QM_TEST_RECORD_HEADER h on d.test_record_id=h.id 
		left join BMS_BASE_PARTS p on p.id=h.parts_id
		STRAIGHT_JOIN BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,d.test_result)
		where h.factory_id=#{factoryId} and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
		and d.test_result !='' and l.bug_type!=''
	]]>
		</if>
		<if test="workshopName!='部件'">
	<![CDATA[
		select count(l.bug)
			from BMS_QM_TEST_CARD_HEADER h left join BMS_QM_TEST_CARD_DETAIL t on h.id=t.test_card_id
			STRAIGHT_JOIN BMS_QM_STANDARD_FAULT_LIBRARY l on find_in_set(l.id,t.test_result) 
			where l.serious_level is not null and substring(h.edit_date,1,10) >=#{startDate} and substring(h.edit_date,1,10) <=#{endDate}
			and h.factory_id=#{factoryId} and t.test_result !='' and h.workshop_id=#{workshopId} and l.bug_type!=''
	]]>
		</if>
	</select>
	<!-- 品质报表end -->
</mapper>